<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--配置开启扫描-->
    <context:component-scan base-package="com.yyyu.mmall.controller"/>
    <!-- 配置注解驱动 -->
    <mvc:annotation-driven/>
    <context:property-placeholder location="classpath*:resource.properties"/>
    <!-- 配置视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--配置逻辑视图的前缀 -->
        <property name="prefix" value="/WEB-INF/view/"/>
        <!--配置逻辑视图的后缀 -->
        <property name="suffix" value=".jsp"/>
    </bean>
    <!-- 解决静态资源无法被springMVC处理的问题 -->
    <mvc:default-servlet-handler/>
    <!--swagger配置文件-->
    <bean class="com.yyyu.mmall.swagger.SwaggerConfig"/>

    <!--jackson配置-->
    <mvc:annotation-driven validator="validator">
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="com.yyyu.mmall.uitls.jackson.MyObjectMapper"/>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 文件上传 配置-->
    <bean id="fileUploadProgressListener" class="com.yyyu.mmall.uitls.upload.FileUploadProgressListener"/>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="104857600"/>
        <property name="maxInMemorySize" value="4096"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <aop:config proxy-target-class="true"/>

    <!--注解的方式配置-->
    <bean class="com.yyyu.mmall.aop.AuthorizationAdvice"/>
    <!-- 开启使用注解完成织入 -->
    <aop:aspectj-autoproxy expose-proxy="true"></aop:aspectj-autoproxy>


    <!--Srping拦截器配置-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/**/fonts/*"/>
            <mvc:exclude-mapping path="/**/*.css"/>
            <mvc:exclude-mapping path="/**/*.js"/>
            <mvc:exclude-mapping path="/**/*.png"/>
            <mvc:exclude-mapping path="/**/*.gif"/>
            <mvc:exclude-mapping path="/**/*.jpg"/>
            <mvc:exclude-mapping path="/**/*.jpeg"/>
            <mvc:exclude-mapping path="/**/*login*"/>
            <mvc:exclude-mapping path="/**/*Login*"/>
            <mvc:exclude-mapping path="/**/validateCode/generate"/>
            <mvc:exclude-mapping path="/**/*test*"/>
            <mvc:exclude-mapping path="/**/swagger-*/**"/>
            <mvc:exclude-mapping path="/**/*api*"/>
            <bean class="com.yyyu.mmall.filter.TokenAuthInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.yyyu.mmall.filter.PerformanceInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.yyyu.mmall.filter.XHRInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!--拦截器得这种配置方法在annotation-driven配置后失效-->
    <!--   <bean id="tokenAuthInterceptor" class="com.yyyu.mmall.filter.TokenAuthInterceptor"/>
       <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping">
           <property name="interceptors">
               <list>
                   <ref bean="tokenAuthInterceptor"/>
               </list>
           </property>
       </bean>-->

    <!--validator 参数验证-->
    <!-- 以下 validator  ConversionService 在使用 mvc:annotation-driven 会 自动注册-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>

    <!-- 国际化的消息资源文件（本系统中主要用于显示/错误消息定制） -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找  -->
                <value>classpath:validator/messages</value>
                <value>classpath:org/hibernate/validator/ValidationMessages</value>
            </list>
        </property>
        <property name="useCodeAsDefaultMessage" value="false"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="cacheSeconds" value="60"/>
    </bean>
    <bean id="springUtils" class="com.yyyu.mmall.uitls.controller.validator.SpringUtils"/>

</beans>